name: Deploy Swagger Documentation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'docs/**'
      - 'package*.json'
      - '.github/workflows/deploy-swagger-docs.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Swagger JSON
        run: |
          # Generate swagger.json using npm script
          npm run docs:generate
          
          # Ensure dist directory exists and copy generated file
          mkdir -p dist
          cp docs/swagger.json dist/swagger.json

      - name: Create static Swagger UI
        run: |
          # Create the static site directories
          mkdir -p dist/docs
          
          # Copy HTML templates from docs/ directory
          cp docs/swagger-ui.html dist/docs/index.html
          cp docs/landing-page.html dist/index.html

      - name: Setup Pages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job to generate swagger.json for other uses (runs on PRs too)
  generate-spec:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate Swagger Configuration
        run: |
          node -e "
            try {
              const { swaggerSpec } = require('./src/config/swaggerConfig');
              console.log('‚úÖ Swagger configuration is valid');
              console.log('üìä Found', Object.keys(swaggerSpec.paths || {}).length, 'endpoints');
              console.log('üè∑Ô∏è  API Version:', swaggerSpec.info.version);
            } catch (error) {
              console.error('‚ùå Swagger configuration error:', error.message);
              process.exit(1);
            }
          "

      - name: Generate OpenAPI spec for review
        run: |
          # Generate swagger.json using npm script
          npm run docs:generate
          
          # Copy for PR preview
          cp docs/swagger.json swagger-preview.json
          echo "Generated swagger-preview.json for PR review"
